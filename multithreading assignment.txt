using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;

namespace multithreading_assignment
{
    class Program
    {
        public string Thread1(string name)
        {
            return " Thread1 started ";
        }
        public int Thread2(int i)
        {
            for (i = 0; i < 15; i++)
            {
                if (i == 5)
                {
                    Console.WriteLine("The thread2 is sleeping");
                    Thread.Sleep(10000);
                }
                Console.WriteLine("The thread is at the position :" + i);
            }
            return i;
        }
        public string Thread3(string str)
        {
            if (str.Length > 4)
            {
                Console.WriteLine("The thread3 is sleeping");
                Thread.Sleep(5000);
            }
            return "Thread3 started ";
        }
        public double Thread4(double length, double width)
        {
            Console.WriteLine("Area of a rectangle is");
            return length * width;
        }


        static void Main(string[] args)
        {
            Program p = new Program();
            
            Thread T1 = new Thread(delegate()
                {
                    Console.WriteLine(p.Thread1("Ramya"));
                });
            Thread T2 = new Thread(delegate()
            {
                Console.WriteLine( p.Thread2(8));
            });
            Thread T3 = new Thread(delegate() 
            {
                Console.WriteLine( p.Thread3("Good Afternoon"));
            });
            Thread T4 = new Thread(delegate ()
            {
                Console.WriteLine(p.Thread4(56.34,12.3));
            });
            T1.Start(); T2.Start();T3.Start();T4.Start();
            Console.ReadKey();

        }

    }
}
    
    
