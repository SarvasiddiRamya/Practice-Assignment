//StudentController.cs

using CRUDMVC.Context;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;
using System.Web.Mvc;


namespace CRUDMVC.Controllers
{
    public class StudentController : Controller
    {
        // GET: Student
        Db_testEntities dbobj = new Db_testEntities();
        public ActionResult Student(tbl_student obj)
        {        
                return View(obj);
        }
        [HttpPost]
        public ActionResult AddStudent(tbl_student model)
        {
            tbl_student obj = new tbl_student();
            if (ModelState.IsValid)
            {
                obj.ID = model.ID;
                obj.FirstName = model.FirstName;
                obj.LastName = model.LastName;
                obj.Email = model.Email;
                obj.Mobile = model.Mobile;
                obj.Description = model.Description;

                if (model.ID == 0)
                {
                    dbobj.tbl_student.Add(obj);
                    dbobj.SaveChanges();
                }
                else
                {
                    dbobj.Entry(obj).State = EntityState.Modified;
                    dbobj.SaveChanges();
                }
             
            }
            ModelState.Clear();
            return View("Student");
        }
        public ActionResult StudentList()
        {
            var res = dbobj.tbl_student.ToList();
            return View(res);
        }

        public ActionResult Delete(int id)
        {
            var res = dbobj.tbl_student.Where(x => x.ID == id).First();
            dbobj.tbl_student.Remove(res);
            dbobj.SaveChanges();
            var list = dbobj.tbl_student.ToList();
            return View("StudentList",list);
        }

    }
}

//StudentList.cshtml

@model CRUDMVC.Context.tbl_student
@{
    ViewBag.Title = "Student";
}
<style>
    .error{
        color:red;
    }
</style>
@using(Html.BeginForm("AddStudent","Student",FormMethod.Post))
{
<div class="container">
    <div class="form-group">
        @Html.HiddenFor(x=>x.ID)
        <label>FirstName</label>
        @Html.ValidationMessageFor(x => x.FirstName,"",new { @class="error"})
        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>LastName</label>
        @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Mobile</label>
        @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "error" })
        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Description</label>
         @Html.TextBoxFor(x => x.Description, new { @class = "form-control", @rows = "10" })
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="reset" class="btn btn-danger">Cancel</button>
    </div>
</div>
}

//tbl_student.cs

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUDMVC.Context
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class tbl_student
    {
        public int ID { get; set; }
        [Required(ErrorMessage ="Required")]
        public string FirstName { get; set; }
        [Required(ErrorMessage = "Required")]
        public string LastName { get; set; }
        [Required(ErrorMessage = "Required")]
        [EmailAddress]
        public string Email { get; set; }
        [Required(ErrorMessage = "Required")]
        [MinLength(10,ErrorMessage ="Mobile no should be 10 digit")]
        public string Mobile { get; set; }
       
        public string Description { get; set; }
    }
}

//_Layout.cshtml

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    <li>@Html.ActionLink("StudentList","StudentList","Student")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    @RenderSection("scripts", required: false)
</body>
</html>

//